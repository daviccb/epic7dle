{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\epic7dle\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameBoard({\n  guesses\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: guesses.map((guess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guess\",\n      children: guess\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = GameBoard;\nfunction App() {\n  _s();\n  const [guesses, setGuesses] = useState([]);\n  const handleNewGuess = newGuess => {\n    setGuesses([...guesses, newGuess]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wordle Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n      guesses: guesses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o1oJThhKU1yQYkTwv9Oq4sjxIZ4=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"GameBoard\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GameBoard","guesses","children","map","guess","index","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","setGuesses","handleNewGuess","newGuess","_c2","$RefreshReg$"],"sources":["C:/Users/David/Desktop/epic7dle/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction GameBoard({ guesses }) {\n  return (\n    <div>\n      {guesses.map((guess, index) => (\n        <div key={index} className=\"guess\">\n          {guess}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction App() {\n  const [guesses, setGuesses] = useState([]);\n\n  const handleNewGuess = (newGuess) => {\n    setGuesses([...guesses, newGuess]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Wordle Clone</h1>\n      <GameBoard guesses={guesses} />\n      {/* You'll add your input method and keyboard here */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,SAASA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAC9B,oBACEF,OAAA;IAAAG,QAAA,EACGD,OAAO,CAACE,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACxBN,OAAA;MAAiBO,SAAS,EAAC,OAAO;MAAAJ,QAAA,EAC/BE;IAAK,GADEC,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GAVQX,SAAS;AAYlB,SAASY,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACZ,OAAO,EAAEa,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMkB,cAAc,GAAIC,QAAQ,IAAK;IACnCF,UAAU,CAAC,CAAC,GAAGb,OAAO,EAAEe,QAAQ,CAAC,CAAC;EACpC,CAAC;EAED,oBACEjB,OAAA;IAAKO,SAAS,EAAC,KAAK;IAAAJ,QAAA,gBAClBH,OAAA;MAAAG,QAAA,EAAI;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBX,OAAA,CAACC,SAAS;MAACC,OAAO,EAAEA;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5B,CAAC;AAEV;AAACG,EAAA,CAdQD,GAAG;AAAAK,GAAA,GAAHL,GAAG;AAgBZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}