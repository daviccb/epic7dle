{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\epic7dle\\\\frontend\\\\src\\\\components\\\\MainGameDir\\\\MainGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport './MainGame.css';\n\n/*\r\nTODO:\r\nplay again button\r\n\r\nadd additional attributes (episode, release date)\r\n\r\nmake own database + rework + fix assets (dark png)\r\nmake pretty\r\nanimations\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainGame() {\n  _s();\n  const [input, setInput] = useState('');\n  const [guesses, setGuesses] = useState([]);\n  const [gameState, setGameState] = useState(false);\n  const [feedback, setFeedback] = useState('');\n  const [characters, setCharacters] = useState([]);\n  const [filteredCharacters, setFilteredCharacters] = useState([]);\n  const [solution, setSolution] = useState(null); // State to hold the solution\n  const [highestStreak, setHighestStreak] = useState(0);\n  const MAX_GUESSES = 5;\n  const imageMap = {\n    //element\n    ice: '/elementAssets/Ice.png',\n    wind: '/elementAssets/Earth.png',\n    fire: '/elementAssets/Fire.png',\n    light: '/elementAssets/Light.png',\n    dark: '/elementAssets/Dark.png',\n    //rarity\n    3: '/rarityAssets/3-star.png',\n    4: '/rarityAssets/4-star.png',\n    5: '/rarityAssets/5-star.png',\n    //class\n    knight: '/classAssets/Knight.png',\n    mage: '/classAssets/Mage.png',\n    ranger: '/classAssets/Ranger.png',\n    manauser: '/classAssets/Soul Weaver.png',\n    assassin: '/classAssets/Thief.png',\n    warrior: '/classAssets/Warrior.png',\n    //zodiac\n    waterbearer: '/zodiacAssets/Aquarius.png',\n    ram: '/zodiacAssets/Aries.png',\n    crab: '/zodiacAssets/Cancer.png',\n    goat: '/zodiacAssets/Capricorn.png',\n    twins: '/zodiacAssets/Gemini.png',\n    lion: '/zodiacAssets/Leo.png',\n    scales: '/zodiacAssets/Libra.png',\n    fish: '/zodiacAssets/Pisces.png',\n    archer: '/zodiacAssets/Sagittarius.png',\n    scorpion: '/zodiacAssets/Scorpio.png',\n    bull: '/zodiacAssets/Taurus.png',\n    maiden: '/zodiacAssets/Virgo.png'\n  };\n\n  // Win Streak Functions\n  const getHighestStreak = () => {\n    return parseInt(localStorage.getItem('highestStreak') || '0', 10);\n  };\n  const updateHighestStreak = currentStreak => {\n    const highestStreak = getHighestStreak();\n    if (currentStreak > highestStreak) {\n      localStorage.setItem('highestStreak', currentStreak.toString());\n      setHighestStreak(currentStreak);\n    }\n  };\n  const getWinStreak = () => parseInt(Cookies.get('winStreak') || '0', 10);\n  const incrementWinStreak = () => {\n    const currentStreak = parseInt(Cookies.get('winStreak') || '0', 10) + 1;\n    Cookies.set('winStreak', currentStreak, {\n      expires: 7\n    });\n    updateHighestStreak(currentStreak);\n  };\n  const resetWinStreak = () => {\n    Cookies.set('winStreak', 0, {\n      expires: 7\n    });\n  };\n  useEffect(() => {\n    setHighestStreak(getHighestStreak());\n  }, []);\n\n  //get characters from json and create list with their data\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/characters').then(response => response.json()).then(data => {\n      const characterList = Object.keys(data).map(key => ({\n        picture: data[key].assets.thumbnail,\n        id: data[key]._id,\n        name: key,\n        element: data[key].attribute,\n        class: data[key].role,\n        // Assuming role is equivalent to class\n        starsign: data[key].zodiac,\n        rarity: data[key].rarity,\n        photo: data[key].assets.icon\n      }));\n      setCharacters(characterList);\n      // Set a random solution from the list\n      if (characterList.length > 0) {\n        const randomIndex = Math.floor(Math.random() * characterList.length);\n        setSolution(characterList[randomIndex]);\n      }\n    });\n  }, []);\n\n  //sort input dropdown\n  useEffect(() => {\n    if (input.trim() === '') {\n      setFilteredCharacters([]);\n    } else {\n      const filtered = characters.filter(char => char.name.toLowerCase().includes(input.toLowerCase()));\n\n      // Sort so that names starting with the input are at the top\n      filtered.sort((a, b) => {\n        const aStartsWith = a.name.toLowerCase().startsWith(input.toLowerCase());\n        const bStartsWith = b.name.toLowerCase().startsWith(input.toLowerCase());\n        if (aStartsWith && !bStartsWith) {\n          return -1; // a should come before b\n        } else if (!aStartsWith && bStartsWith) {\n          return 1; // b should come before a\n        } else {\n          return 0; // default order\n        }\n      });\n      setFilteredCharacters(filtered);\n    }\n  }, [input, characters]);\n  const handleInputChange = event => {\n    setInput(event.target.value);\n  };\n  const handleGuessSubmit = async () => {\n    if (input.trim() !== '') {\n      // First, disable the button or show a loading indicator (not shown here)\n\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/api/characters/${input.trim()}`);\n        const details = await response.json();\n        console.log(details);\n\n        // Check if details are valid and contain 'attribute'\n        if (details && details.attribute) {\n          const isCorrect = details._id === solution.id;\n          const newGuess = {\n            picture: details.assets.thumbnail,\n            photo: details.assets.icon,\n            guess: input,\n            element: details.attribute,\n            class: details.role,\n            starsign: details.zodiac,\n            rarity: details.rarity,\n            correct: isCorrect\n          };\n\n          // Set all states at once after the fetch is completed and data is processed\n          setGuesses(prevGuesses => [newGuess, ...prevGuesses]); // Ensures immutability\n          setInput(''); // Clear input\n\n          setGameState(isCorrect ? true : false); // game win\n          if (guesses.length + 1 >= MAX_GUESSES) {\n            setGameState(true); // game loss\n            resetWinStreak();\n          }\n          if (isCorrect === true) {\n            incrementWinStreak();\n            updateHighestStreak();\n          }\n          setFeedback(isCorrect ? 'Correct! Well done.' : 'Incorrect, try again!');\n        } else {\n          // Handle case where no valid details are returned\n          setFeedback('Failed to fetch details for the character. Try again.');\n        }\n      } catch (error) {\n        console.error('Failed to fetch character details:', error);\n        setFeedback('Error fetching character details.');\n      } finally {\n        // Re-enable the button or hide loading indicator here\n      }\n    }\n  };\n  const resetGame = async () => {\n    // Reset game state\n    setInput('');\n    setGuesses([]);\n    setGameState(true);\n    resetWinStreak(); // Resets current win streak if the game is over\n    setFeedback('');\n\n    // Fetch a new solution from your character list or backend if needed\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/characters');\n      const data = await response.json();\n      const characterList = Object.keys(data).map(key => ({\n        picture: data[key].assets.thumbnail,\n        id: data[key]._id,\n        name: key,\n        element: data[key].attribute,\n        class: data[key].role,\n        // Assuming role is equivalent to class\n        starsign: data[key].zodiac,\n        rarity: data[key].rarity,\n        photo: data[key].assets.icon\n      }));\n      setCharacters(characterList);\n      if (characterList.length > 0) {\n        const randomIndex = Math.floor(Math.random() * characterList.length);\n        setSolution(characterList[randomIndex]);\n      }\n    } catch (error) {\n      console.error('Failed to fetch new characters:', error);\n      setFeedback('Failed to load new game data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Endless Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tries \", guesses.length, \"/\", MAX_GUESSES]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-display\",\n      children: gameState && solution && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: solution.picture,\n        alt: \"Character\",\n        className: \"character-imagebig\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"streak-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Streak: \", getWinStreak()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Highest score: \", highestStreak]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          disabled: gameState,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guess-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-button-wrapper\",\n        disabled: !gameState,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter character name...\",\n          value: input,\n          onChange: handleInputChange,\n          disabled: gameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGuessSubmit,\n          children: \"Guess\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), filteredCharacters.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"autocomplete-dropdown\",\n        children: filteredCharacters.map(character => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setInput(character.name),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: character.photo,\n            alt: character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this), character.name]\n        }, character.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guess-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Element\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Class\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Star Sign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rarity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: guesses.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.photo,\n                alt: \"Character\",\n                className: \"character-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: item.guess === solution.name ? 'correct-answer' : 'incorrect-answer',\n              children: item.guess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: item.element === solution.element ? 'correct-answer' : 'incorrect-answer',\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageMap[item.element],\n                alt: item.element\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: item.class === solution.class ? 'correct-answer' : 'incorrect-answer',\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageMap[item.class],\n                alt: item.class\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: item.starsign === solution.starsign ? 'correct-answer' : 'incorrect-answer',\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageMap[item.starsign],\n                alt: item.starsign\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: item.rarity === solution.rarity ? 'correct-answer' : 'incorrect-answer',\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageMap[item.rarity],\n                alt: item.rarity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), solution && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Debug: Solution is \", solution.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n_s(MainGame, \"W5R5Cippn+41aGx/ze23oh+2Kj8=\");\n_c = MainGame;\nexport default MainGame;\nvar _c;\n$RefreshReg$(_c, \"MainGame\");","map":{"version":3,"names":["React","useState","useEffect","Cookies","jsxDEV","_jsxDEV","MainGame","_s","input","setInput","guesses","setGuesses","gameState","setGameState","feedback","setFeedback","characters","setCharacters","filteredCharacters","setFilteredCharacters","solution","setSolution","highestStreak","setHighestStreak","MAX_GUESSES","imageMap","ice","wind","fire","light","dark","knight","mage","ranger","manauser","assassin","warrior","waterbearer","ram","crab","goat","twins","lion","scales","fish","archer","scorpion","bull","maiden","getHighestStreak","parseInt","localStorage","getItem","updateHighestStreak","currentStreak","setItem","toString","getWinStreak","get","incrementWinStreak","set","expires","resetWinStreak","fetch","then","response","json","data","characterList","Object","keys","map","key","picture","assets","thumbnail","id","_id","name","element","attribute","class","role","starsign","zodiac","rarity","photo","icon","length","randomIndex","Math","floor","random","trim","filtered","filter","char","toLowerCase","includes","sort","a","b","aStartsWith","startsWith","bStartsWith","handleInputChange","event","target","value","handleGuessSubmit","details","console","log","isCorrect","newGuess","guess","correct","prevGuesses","error","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","disabled","type","placeholder","onChange","character","item","index","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/epic7dle/frontend/src/components/MainGameDir/MainGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport './MainGame.css';\r\n\r\n/*\r\nTODO:\r\nplay again button\r\n\r\nadd additional attributes (episode, release date)\r\n\r\nmake own database + rework + fix assets (dark png)\r\nmake pretty\r\nanimations\r\n*/\r\n\r\n\r\n\r\nfunction MainGame() {\r\n  const [input, setInput] = useState('');\r\n  const [guesses, setGuesses] = useState([]);\r\n  const [gameState, setGameState] = useState(false);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [characters, setCharacters] = useState([]);\r\n  const [filteredCharacters, setFilteredCharacters] = useState([]);\r\n  const [solution, setSolution] = useState(null);  // State to hold the solution\r\n  const [highestStreak, setHighestStreak] = useState(0);\r\n\r\n  const MAX_GUESSES = 5;\r\n  const imageMap = {\r\n    //element\r\n    ice: '/elementAssets/Ice.png',\r\n    wind: '/elementAssets/Earth.png',\r\n    fire: '/elementAssets/Fire.png',\r\n    light: '/elementAssets/Light.png',\r\n    dark: '/elementAssets/Dark.png',\r\n\r\n    //rarity\r\n    3: '/rarityAssets/3-star.png',\r\n    4: '/rarityAssets/4-star.png',\r\n    5: '/rarityAssets/5-star.png',\r\n\r\n    //class\r\n    knight: '/classAssets/Knight.png',\r\n    mage: '/classAssets/Mage.png',\r\n    ranger: '/classAssets/Ranger.png',\r\n    manauser: '/classAssets/Soul Weaver.png',\r\n    assassin: '/classAssets/Thief.png',\r\n    warrior: '/classAssets/Warrior.png',\r\n\r\n    //zodiac\r\n    waterbearer: '/zodiacAssets/Aquarius.png',\r\n    ram: '/zodiacAssets/Aries.png',\r\n    crab: '/zodiacAssets/Cancer.png',\r\n    goat: '/zodiacAssets/Capricorn.png',\r\n    twins: '/zodiacAssets/Gemini.png',\r\n    lion: '/zodiacAssets/Leo.png',\r\n    scales: '/zodiacAssets/Libra.png',\r\n    fish: '/zodiacAssets/Pisces.png',\r\n    archer: '/zodiacAssets/Sagittarius.png',\r\n    scorpion: '/zodiacAssets/Scorpio.png',\r\n    bull: '/zodiacAssets/Taurus.png',\r\n    maiden: '/zodiacAssets/Virgo.png',\r\n  };\r\n\r\n  // Win Streak Functions\r\n  const getHighestStreak = () => {\r\n    return parseInt(localStorage.getItem('highestStreak') || '0', 10);\r\n  };\r\n  const updateHighestStreak = (currentStreak) => {\r\n    const highestStreak = getHighestStreak();\r\n    if (currentStreak > highestStreak) {\r\n      localStorage.setItem('highestStreak', currentStreak.toString());\r\n      setHighestStreak(currentStreak);\r\n    }\r\n  };\r\n  const getWinStreak = () => parseInt(Cookies.get('winStreak') || '0', 10);\r\n  const incrementWinStreak = () => {\r\n    const currentStreak = parseInt(Cookies.get('winStreak') || '0', 10) + 1;\r\n    Cookies.set('winStreak', currentStreak, { expires: 7 });\r\n    updateHighestStreak(currentStreak);\r\n  };\r\n  const resetWinStreak = () => {\r\n    Cookies.set('winStreak', 0, { expires: 7 });\r\n  };\r\n  useEffect(() => {\r\n    setHighestStreak(getHighestStreak());\r\n  }, []);\r\n\r\n  //get characters from json and create list with their data\r\n  useEffect(() => {\r\n    fetch('http://127.0.0.1:5000/api/characters')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const characterList = Object.keys(data).map(key => ({\r\n          picture: data[key].assets.thumbnail,\r\n          id: data[key]._id,\r\n          name: key,\r\n          element: data[key].attribute,\r\n          class: data[key].role, // Assuming role is equivalent to class\r\n          starsign: data[key].zodiac,\r\n          rarity: data[key].rarity,\r\n          photo: data[key].assets.icon\r\n        }));\r\n        setCharacters(characterList);\r\n        // Set a random solution from the list\r\n        if (characterList.length > 0) {\r\n          const randomIndex = Math.floor(Math.random() * characterList.length);\r\n          setSolution(characterList[randomIndex]);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  //sort input dropdown\r\n  useEffect(() => {\r\n    if (input.trim() === '') {\r\n      setFilteredCharacters([]);\r\n    } else {\r\n      const filtered = characters.filter(char =>\r\n        char.name.toLowerCase().includes(input.toLowerCase())\r\n      );\r\n\r\n      // Sort so that names starting with the input are at the top\r\n      filtered.sort((a, b) => {\r\n        const aStartsWith = a.name.toLowerCase().startsWith(input.toLowerCase());\r\n        const bStartsWith = b.name.toLowerCase().startsWith(input.toLowerCase());\r\n        if (aStartsWith && !bStartsWith) {\r\n          return -1;  // a should come before b\r\n        } else if (!aStartsWith && bStartsWith) {\r\n          return 1;  // b should come before a\r\n        } else {\r\n          return 0;  // default order\r\n        }\r\n      });\r\n\r\n      setFilteredCharacters(filtered);\r\n    }\r\n  }, [input, characters]);\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n\r\n  const handleGuessSubmit = async () => {\r\n    if (input.trim() !== '') {\r\n      // First, disable the button or show a loading indicator (not shown here)\r\n\r\n      try {\r\n        const response = await fetch(`http://127.0.0.1:5000/api/characters/${input.trim()}`);\r\n        const details = await response.json();\r\n        console.log(details);\r\n\r\n        // Check if details are valid and contain 'attribute'\r\n        if (details && details.attribute) {\r\n          const isCorrect = details._id === solution.id;\r\n          const newGuess = {\r\n            picture: details.assets.thumbnail,\r\n            photo: details.assets.icon,\r\n            guess: input,\r\n            element: details.attribute,\r\n            class: details.role,\r\n            starsign: details.zodiac,\r\n            rarity: details.rarity,\r\n            correct: isCorrect\r\n          };\r\n\r\n          // Set all states at once after the fetch is completed and data is processed\r\n          setGuesses(prevGuesses => [newGuess, ...prevGuesses]); // Ensures immutability\r\n          setInput(''); // Clear input\r\n\r\n          setGameState(isCorrect ? true : false); // game win\r\n          if (guesses.length + 1 >= MAX_GUESSES) {\r\n            setGameState(true); // game loss\r\n            resetWinStreak();\r\n          }\r\n\r\n          if (isCorrect === true) {\r\n            incrementWinStreak();\r\n            updateHighestStreak();\r\n          }\r\n          setFeedback(isCorrect ? 'Correct! Well done.' : 'Incorrect, try again!');\r\n\r\n        } else {\r\n          // Handle case where no valid details are returned\r\n          setFeedback('Failed to fetch details for the character. Try again.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch character details:', error);\r\n        setFeedback('Error fetching character details.');\r\n      } finally {\r\n        // Re-enable the button or hide loading indicator here\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetGame = async () => {\r\n    // Reset game state\r\n    setInput('');\r\n    setGuesses([]);\r\n    setGameState(true);\r\n    resetWinStreak(); // Resets current win streak if the game is over\r\n    setFeedback('');\r\n  \r\n    // Fetch a new solution from your character list or backend if needed\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/api/characters');\r\n      const data = await response.json();\r\n      const characterList = Object.keys(data).map(key => ({\r\n        picture: data[key].assets.thumbnail,\r\n        id: data[key]._id,\r\n        name: key,\r\n        element: data[key].attribute,\r\n        class: data[key].role, // Assuming role is equivalent to class\r\n        starsign: data[key].zodiac,\r\n        rarity: data[key].rarity,\r\n        photo: data[key].assets.icon\r\n      }));\r\n      setCharacters(characterList);\r\n      if (characterList.length > 0) {\r\n        const randomIndex = Math.floor(Math.random() * characterList.length);\r\n        setSolution(characterList[randomIndex]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch new characters:', error);\r\n      setFeedback('Failed to load new game data.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-game\">\r\n\r\n      <div className=\"game-header\">\r\n        <h1>Endless Mode</h1>\r\n        <p>Tries {guesses.length}/{MAX_GUESSES}</p>\r\n      </div>\r\n      <div className=\"character-display\">\r\n        {gameState && solution && (\r\n          <img src={solution.picture} alt=\"Character\" className=\"character-imagebig\" />\r\n        )}\r\n\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div className=\"streak-info\">\r\n          <p>Streak: {getWinStreak()}</p>\r\n          <p>Highest score: {highestStreak}</p>\r\n          <button onClick={resetGame} disabled={gameState}>Play Again</button>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"guess-input\" >\r\n        <div className=\"input-button-wrapper\" disabled={!gameState}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter character name...\"\r\n            value={input}\r\n            onChange={handleInputChange}\r\n            disabled={gameState}\r\n          />\r\n          <button onClick={handleGuessSubmit}>Guess</button>\r\n        </div>\r\n        {filteredCharacters.length > 0 && (\r\n          <ul className=\"autocomplete-dropdown\">\r\n            {filteredCharacters.map(character => (\r\n              <li key={character.id} onClick={() => setInput(character.name)}>\r\n                <img src={character.photo} alt={character.name} />\r\n                {character.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <p>{feedback}</p> {/* Display feedback message */}\r\n      <div className=\"guess-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Photo</th>\r\n              <th>Name</th>\r\n              <th>Element</th>\r\n              <th>Class</th>\r\n              <th>Star Sign</th>\r\n              <th>Rarity</th>\r\n              {/* <th>Episode</th> */}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {guesses.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <img src={item.photo} alt=\"Character\" className=\"character-image\" />\r\n                </td>\r\n                <td className={item.guess === solution.name ? 'correct-answer' : 'incorrect-answer'}>\r\n                  {item.guess}\r\n                </td>\r\n                <td className={item.element === solution.element ? 'correct-answer' : 'incorrect-answer'}>\r\n                  <img src={imageMap[item.element]} alt={item.element} />\r\n                </td>\r\n                <td className={item.class === solution.class ? 'correct-answer' : 'incorrect-answer'}>\r\n                  <img src={imageMap[item.class]} alt={item.class} />\r\n                </td>\r\n                <td className={item.starsign === solution.starsign ? 'correct-answer' : 'incorrect-answer'}>\r\n                  <img src={imageMap[item.starsign]} alt={item.starsign} />\r\n                </td>\r\n                <td className={item.rarity === solution.rarity ? 'correct-answer' : 'incorrect-answer'}>\r\n                  <img src={imageMap[item.rarity]} alt={item.rarity} />\r\n                </td>\r\n                {/* <td className={item.correct ? 'correct' : 'incorrect'}>\r\n                                {item.correct ? 'Correct' : 'Incorrect'}\r\n                            </td> */}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {solution && <div>Debug: Solution is {solution.name}</div>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default MainGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}