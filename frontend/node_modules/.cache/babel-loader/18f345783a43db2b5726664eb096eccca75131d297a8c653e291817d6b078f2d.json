{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\epic7dle\\\\frontend\\\\src\\\\components\\\\MainGameDir\\\\MainGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MainGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CORRECT_ANSWER = \"Zio\"; // You can dynamically set this based on your application needs\n\nfunction MainGame() {\n  _s();\n  const [input, setInput] = useState('');\n  const [guesses, setGuesses] = useState([]);\n  const [feedback, setFeedback] = useState('');\n  const [characters, setCharacters] = useState([]);\n  const [filteredCharacters, setFilteredCharacters] = useState([]);\n  useEffect(() => {\n    // Fetch all characters when the component mounts\n    fetch('http://127.0.0.1:5000/api/characters').then(response => response.json()).then(data => {\n      const characterList = Object.keys(data).map(key => ({\n        id: data[key].id,\n        name: key,\n        attribute: data[key].attribute\n      }));\n      setCharacters(characterList);\n    });\n  }, []);\n  useEffect(() => {\n    if (input.trim() === '') {\n      setFilteredCharacters([]);\n    } else {\n      const filtered = characters.filter(char => char.name.toLowerCase().includes(input.toLowerCase()));\n      setFilteredCharacters(filtered);\n    }\n  }, [input, characters]);\n  const handleInputChange = event => {\n    setInput(event.target.value);\n  };\n  const handleGuessSubmit = async () => {\n    if (input.trim() !== '') {\n      // First, disable the button or show a loading indicator (not shown here)\n\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/api/characters/${input.trim()}`);\n        const details = await response.json();\n\n        // Check if details are valid and contain 'attribute'\n        if (details && details.attribute) {\n          const isCorrect = input.trim().toLowerCase() === CORRECT_ANSWER.toLowerCase();\n          const newGuess = {\n            guess: input,\n            element: details.attribute,\n            correct: isCorrect\n          };\n\n          // Set all states at once after the fetch is completed and data is processed\n          setGuesses(prevGuesses => [newGuess, ...prevGuesses]); // Ensures immutability\n          setInput(''); // Clear input\n          setFeedback(isCorrect ? 'Correct! Well done.' : 'Incorrect, try again!');\n        } else {\n          // Handle case where no valid details are returned\n          setFeedback('Failed to fetch details for the character. Try again.');\n        }\n      } catch (error) {\n        console.error('Failed to fetch character details:', error);\n        setFeedback('Error fetching character details.');\n      } finally {\n        // Re-enable the button or hide loading indicator here\n      }\n    }\n  };\n  async function fetchCharacters() {\n    const response = await fetch('http://127.0.0.1:5000/api/characters');\n    const characters = await response.json();\n    console.log(characters);\n  }\n  async function fetchCharacterDetails(characterId) {\n    const response = await fetch(`http://127.0.0.1:5000/api/characters/${characterId}`);\n    const details = await response.json();\n    console.log(details); // Make sure this logs expected details\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter character name...\",\n      value: input,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), filteredCharacters.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"autocomplete-dropdown\",\n      children: filteredCharacters.map(character => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => setInput(character.name),\n        children: [character.name, \" - \", character.attribute]\n      }, character.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(MainGame, \"rtHT8ar1/pV/K+BwnJeuN7rfFpk=\");\n_c = MainGame;\nexport default MainGame;\nvar _c;\n$RefreshReg$(_c, \"MainGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CORRECT_ANSWER","MainGame","_s","input","setInput","guesses","setGuesses","feedback","setFeedback","characters","setCharacters","filteredCharacters","setFilteredCharacters","fetch","then","response","json","data","characterList","Object","keys","map","key","id","name","attribute","trim","filtered","filter","char","toLowerCase","includes","handleInputChange","event","target","value","handleGuessSubmit","details","isCorrect","newGuess","guess","element","correct","prevGuesses","error","console","fetchCharacters","log","fetchCharacterDetails","characterId","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","character","onClick","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/epic7dle/frontend/src/components/MainGameDir/MainGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MainGame.css';\r\n\r\nconst CORRECT_ANSWER = \"Zio\"; // You can dynamically set this based on your application needs\r\n\r\n\r\n\r\nfunction MainGame() {\r\n  const [input, setInput] = useState('');\r\n  const [guesses, setGuesses] = useState([]);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [characters, setCharacters] = useState([]);\r\n  const [filteredCharacters, setFilteredCharacters] = useState([]);\r\n\r\n  useEffect(() => {\r\n      // Fetch all characters when the component mounts\r\n      fetch('http://127.0.0.1:5000/api/characters')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n              const characterList = Object.keys(data).map(key => ({\r\n                  id: data[key].id,\r\n                  name: key,\r\n                  attribute: data[key].attribute,\r\n              }));\r\n              setCharacters(characterList);\r\n          });\r\n  }, []);\r\n\r\n    useEffect(() => {\r\n      if (input.trim() === '') {\r\n          setFilteredCharacters([]);\r\n      } else {\r\n          const filtered = characters.filter(char =>\r\n              char.name.toLowerCase().includes(input.toLowerCase())\r\n          );\r\n          setFilteredCharacters(filtered);\r\n      }\r\n    }, [input, characters]);\r\n\r\n  const handleInputChange = (event) => {\r\n      setInput(event.target.value);\r\n  };\r\n\r\n\r\n    const handleGuessSubmit = async () => {\r\n      if (input.trim() !== '') {\r\n        // First, disable the button or show a loading indicator (not shown here)\r\n    \r\n        try {\r\n          const response = await fetch(`http://127.0.0.1:5000/api/characters/${input.trim()}`);\r\n          const details = await response.json();\r\n    \r\n          // Check if details are valid and contain 'attribute'\r\n          if (details && details.attribute) {\r\n            const isCorrect = input.trim().toLowerCase() === CORRECT_ANSWER.toLowerCase();\r\n            const newGuess = {\r\n              guess: input,\r\n              element: details.attribute,\r\n              correct: isCorrect\r\n            };\r\n    \r\n            // Set all states at once after the fetch is completed and data is processed\r\n            setGuesses(prevGuesses => [newGuess, ...prevGuesses]); // Ensures immutability\r\n            setInput(''); // Clear input\r\n            setFeedback(isCorrect ? 'Correct! Well done.' : 'Incorrect, try again!');\r\n          } else {\r\n            // Handle case where no valid details are returned\r\n            setFeedback('Failed to fetch details for the character. Try again.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to fetch character details:', error);\r\n          setFeedback('Error fetching character details.');\r\n        } finally {\r\n          // Re-enable the button or hide loading indicator here\r\n        }\r\n      }\r\n    };\r\n     \r\n\r\n  async function fetchCharacters() {\r\n    const response = await fetch('http://127.0.0.1:5000/api/characters');\r\n    const characters = await response.json();\r\n    console.log(characters);\r\n  }\r\n  \r\n  async function fetchCharacterDetails(characterId) {\r\n    const response = await fetch(`http://127.0.0.1:5000/api/characters/${characterId}`);\r\n    const details = await response.json();\r\n    console.log(details); // Make sure this logs expected details\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"main-game\">\r\n        <input\r\n            type=\"text\"\r\n            placeholder=\"Enter character name...\"\r\n            value={input}\r\n            onChange={handleInputChange}\r\n        />\r\n        {filteredCharacters.length > 0 && (\r\n            <ul className=\"autocomplete-dropdown\">\r\n                {filteredCharacters.map(character => (\r\n                    <li key={character.id} onClick={() => setInput(character.name)}>\r\n                        {character.name} - {character.attribute}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )}\r\n    </div>\r\n);\r\n}\r\n\r\nexport default MainGame;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}