{"ast":null,"code":"const express = require('express');\nconst bodyParser = require('body-parser');\nconst fs = require('fs-extra');\nconst path = require('path');\nconst port = 3000;\nconst app = express();\napp.use(bodyParser.json());\nconst DATA_FILE = path.join(__dirname, 'game-data.json');\napp.get('/', (req, res) => {\n  res.send('Hello World!');\n});\napp.listen(port, () => {\n  console.log(`Example app listening at http://localhost:${port}`);\n});\n\n// Route to get all characters' basic info\napp.get('/characters', async (req, res) => {\n  try {\n    const data = await fs.readJson(DATA_FILE);\n    const characterSummaries = Object.entries(data).map(([key, value]) => ({\n      name: value.name,\n      attribute: value.attribute,\n      role: value.role,\n      rarity: value.rarity\n    }));\n    res.json(characterSummaries);\n  } catch (err) {\n    res.status(500).send('Error reading data file.');\n  }\n});\n\n// Route to get detailed information about a specific character\napp.get('/characters/:id', async (req, res) => {\n  try {\n    const data = await fs.readJson(DATA_FILE);\n    const character = data[req.params.id];\n    if (character) {\n      res.json(character);\n    } else {\n      res.status(404).send('Character not found');\n    }\n  } catch (err) {\n    res.status(500).send('Error reading data file.');\n  }\n});\n\n// Add this in your server.js\n// Assuming your solution is dynamic or changes daily\napp.post('/guess', async (req, res) => {\n  try {\n    const {\n      guess\n    } = req.body;\n    const data = await fs.readJson(DATA_FILE);\n    const solution = data.solution; // Assuming 'solution' holds the correct character's name\n    const result = guess.toLowerCase() === solution.toLowerCase();\n    res.json({\n      correct: result\n    });\n  } catch (err) {\n    res.status(500).send('Error processing guess.');\n  }\n});","map":{"version":3,"names":["express","require","bodyParser","fs","path","port","app","use","json","DATA_FILE","join","__dirname","get","req","res","send","listen","console","log","data","readJson","characterSummaries","Object","entries","map","key","value","name","attribute","role","rarity","err","status","character","params","id","post","guess","body","solution","result","toLowerCase","correct"],"sources":["C:/Users/David/Desktop/epic7dle/src/server.js"],"sourcesContent":["const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst fs = require('fs-extra');\r\nconst path = require('path');\r\nconst port = 3000;\r\n\r\nconst app = express();\r\napp.use(bodyParser.json());\r\n\r\nconst DATA_FILE = path.join(__dirname, 'game-data.json');\r\n\r\n\r\napp.get('/', (req, res) => {\r\n    res.send('Hello World!');\r\n  });\r\n  \r\n  app.listen(port, () => {\r\n    console.log(`Example app listening at http://localhost:${port}`);\r\n  });\r\n\r\n// Route to get all characters' basic info\r\napp.get('/characters', async (req, res) => {\r\n    try {\r\n        const data = await fs.readJson(DATA_FILE);\r\n        const characterSummaries = Object.entries(data).map(([key, value]) => ({\r\n            name: value.name,\r\n            attribute: value.attribute,\r\n            role: value.role,\r\n            rarity: value.rarity\r\n        }));\r\n        res.json(characterSummaries);\r\n    } catch (err) {\r\n        res.status(500).send('Error reading data file.');\r\n    }\r\n});\r\n\r\n// Route to get detailed information about a specific character\r\napp.get('/characters/:id', async (req, res) => {\r\n    try {\r\n        const data = await fs.readJson(DATA_FILE);\r\n        const character = data[req.params.id];\r\n        if (character) {\r\n            res.json(character);\r\n        } else {\r\n            res.status(404).send('Character not found');\r\n        }\r\n    } catch (err) {\r\n        res.status(500).send('Error reading data file.');\r\n    }\r\n});\r\n\r\n// Add this in your server.js\r\n// Assuming your solution is dynamic or changes daily\r\napp.post('/guess', async (req, res) => {\r\n    try {\r\n        const { guess } = req.body;\r\n        const data = await fs.readJson(DATA_FILE);\r\n        const solution = data.solution; // Assuming 'solution' holds the correct character's name\r\n        const result = (guess.toLowerCase() === solution.toLowerCase());\r\n        res.json({ correct: result });\r\n    } catch (err) {\r\n        res.status(500).send('Error processing guess.');\r\n    }\r\n});\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}