{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\epic7dle\\\\frontend\\\\src\\\\components\\\\MainGameDir\\\\MainGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MainGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOLUTION = {\n  element: \"dark\",\n  class: \"mage\",\n  rarity: 5\n};\nfunction MainGame() {\n  _s();\n  const [input, setInput] = useState('');\n  const [guesses, setGuesses] = useState([]);\n  const [feedback, setFeedback] = useState('');\n  const [characters, setCharacters] = useState([]);\n  const [filteredCharacters, setFilteredCharacters] = useState([]);\n  const [solution, setSolution] = useState(null); // State to hold the solution\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/characters').then(response => response.json()).then(data => {\n      const characterList = Object.keys(data).map(key => ({\n        id: data[key].id,\n        name: key,\n        attribute: data[key].attribute,\n        class: data[key].role,\n        // Assuming role is equivalent to class\n        starsign: data[key].zodiac,\n        rarity: data[key].rarity,\n        photo: data[key].assets.icon\n      }));\n      setCharacters(characterList);\n      // Set a random solution from the list\n      if (characterList.length > 0) {\n        const randomIndex = Math.floor(Math.random() * characterList.length);\n        setSolution(characterList[randomIndex]);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (input.trim() === '') {\n      setFilteredCharacters([]);\n    } else {\n      const filtered = characters.filter(char => char.name.toLowerCase().includes(input.toLowerCase()));\n\n      // Sort so that names starting with the input are at the top\n      filtered.sort((a, b) => {\n        const aStartsWith = a.name.toLowerCase().startsWith(input.toLowerCase());\n        const bStartsWith = b.name.toLowerCase().startsWith(input.toLowerCase());\n        if (aStartsWith && !bStartsWith) {\n          return -1; // a should come before b\n        } else if (!aStartsWith && bStartsWith) {\n          return 1; // b should come before a\n        } else {\n          return 0; // default order\n        }\n      });\n      setFilteredCharacters(filtered);\n    }\n  }, [input, characters]);\n  const handleInputChange = event => {\n    setInput(event.target.value);\n  };\n  const handleGuessSubmit = async () => {\n    if (input.trim() !== '') {\n      // First, disable the button or show a loading indicator (not shown here)\n\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/api/characters/${input.trim()}`);\n        const details = await response.json();\n        console.log(details);\n\n        // Check if details are valid and contain 'attribute'\n        if (details && details.attribute) {\n          const isCorrect = details._id === solution._id;\n          const newGuess = {\n            photo: details.assets.icon,\n            guess: input,\n            element: details.attribute,\n            class: details.role,\n            starsign: details.zodiac,\n            rarity: details.rarity,\n            correct: isCorrect\n          };\n\n          // Set all states at once after the fetch is completed and data is processed\n          setGuesses(prevGuesses => [newGuess, ...prevGuesses]); // Ensures immutability\n          setInput(''); // Clear input\n          setFeedback(isCorrect ? 'Correct! Well done.' : 'Incorrect, try again!');\n        } else {\n          // Handle case where no valid details are returned\n          setFeedback('Failed to fetch details for the character. Try again.');\n        }\n      } catch (error) {\n        console.error('Failed to fetch character details:', error);\n        setFeedback('Error fetching character details.');\n      } finally {\n        // Re-enable the button or hide loading indicator here\n      }\n    }\n  };\n  async function fetchCharacters() {\n    const response = await fetch('http://127.0.0.1:5000/api/characters');\n    const characters = await response.json();\n    console.log(characters);\n  }\n  async function fetchCharacterDetails(characterId) {\n    const response = await fetch(`http://127.0.0.1:5000/api/characters/${characterId}`);\n    const details = await response.json();\n    console.log(details); // Make sure this logs expected details\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter character name...\",\n        value: input,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), filteredCharacters.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"autocomplete-dropdown\",\n        children: filteredCharacters.map(character => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setInput(character.name),\n          children: [character.name, \" \"]\n        }, character.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGuessSubmit,\n        children: \"Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guess-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Element\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Class\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Star Sign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rarity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: guesses.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.photo,\n                alt: \"Character\",\n                className: \"character-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.guess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: item.element === solution.element ? 'correct-answer' : 'incorrect-answer',\n              children: item.element\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: item.class === solution.class ? 'correct-answer' : 'incorrect-answer',\n              children: item.class\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: item.starsign === solution.starsign ? 'correct-answer' : 'incorrect-answer',\n              children: item.starsign\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: item.rarity === solution.rarity ? 'correct-answer' : 'incorrect-answer',\n              children: item.rarity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: item.correct ? 'correct' : 'incorrect',\n              children: item.correct ? 'Correct' : 'Incorrect'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), solution && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Debug: Solution is \", solution.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(MainGame, \"uDwZCzOIntps9YseTonBg+PeVqY=\");\n_c = MainGame;\nexport default MainGame;\nvar _c;\n$RefreshReg$(_c, \"MainGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SOLUTION","element","class","rarity","MainGame","_s","input","setInput","guesses","setGuesses","feedback","setFeedback","characters","setCharacters","filteredCharacters","setFilteredCharacters","solution","setSolution","fetch","then","response","json","data","characterList","Object","keys","map","key","id","name","attribute","role","starsign","zodiac","photo","assets","icon","length","randomIndex","Math","floor","random","trim","filtered","filter","char","toLowerCase","includes","sort","a","b","aStartsWith","startsWith","bStartsWith","handleInputChange","event","target","value","handleGuessSubmit","details","console","log","isCorrect","_id","newGuess","guess","correct","prevGuesses","error","fetchCharacters","fetchCharacterDetails","characterId","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","character","onClick","item","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/epic7dle/frontend/src/components/MainGameDir/MainGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MainGame.css';\r\n\r\nconst SOLUTION = {\r\n  element: \"dark\",\r\n  class: \"mage\",\r\n  rarity: 5\r\n};\r\n\r\n\r\n\r\nfunction MainGame() {\r\n  const [input, setInput] = useState('');\r\n  const [guesses, setGuesses] = useState([]);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [characters, setCharacters] = useState([]);\r\n  const [filteredCharacters, setFilteredCharacters] = useState([]);\r\n  const [solution, setSolution] = useState(null);  // State to hold the solution\r\n\r\n  useEffect(() => {\r\n      fetch('http://127.0.0.1:5000/api/characters')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n              const characterList = Object.keys(data).map(key => ({\r\n                  id: data[key].id,\r\n                  name: key,\r\n                  attribute: data[key].attribute,\r\n                  class: data[key].role, // Assuming role is equivalent to class\r\n                  starsign: data[key].zodiac,\r\n                  rarity: data[key].rarity,\r\n                  photo: data[key].assets.icon\r\n              }));\r\n              setCharacters(characterList);\r\n              // Set a random solution from the list\r\n              if (characterList.length > 0) {\r\n                  const randomIndex = Math.floor(Math.random() * characterList.length);\r\n                  setSolution(characterList[randomIndex]);\r\n              }\r\n          });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (input.trim() === '') {\r\n        setFilteredCharacters([]);\r\n    } else {\r\n        const filtered = characters.filter(char =>\r\n            char.name.toLowerCase().includes(input.toLowerCase())\r\n        );\r\n\r\n        // Sort so that names starting with the input are at the top\r\n        filtered.sort((a, b) => {\r\n            const aStartsWith = a.name.toLowerCase().startsWith(input.toLowerCase());\r\n            const bStartsWith = b.name.toLowerCase().startsWith(input.toLowerCase());\r\n            if (aStartsWith && !bStartsWith) {\r\n                return -1;  // a should come before b\r\n            } else if (!aStartsWith && bStartsWith) {\r\n                return 1;  // b should come before a\r\n            } else {\r\n                return 0;  // default order\r\n            }\r\n        });\r\n\r\n        setFilteredCharacters(filtered);\r\n      }\r\n  }, [input, characters]);\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n      setInput(event.target.value);\r\n  };\r\n\r\n\r\n    const handleGuessSubmit = async () => {\r\n      if (input.trim() !== '') {\r\n        // First, disable the button or show a loading indicator (not shown here)\r\n    \r\n        try {\r\n          const response = await fetch(`http://127.0.0.1:5000/api/characters/${input.trim()}`);\r\n          const details = await response.json();\r\n          console.log(details);\r\n    \r\n          // Check if details are valid and contain 'attribute'\r\n          if (details && details.attribute) {\r\n            const isCorrect = details._id === solution._id;\r\n            const newGuess = {\r\n              photo: details.assets.icon,\r\n              guess: input,\r\n              element: details.attribute,\r\n              class: details.role,\r\n              starsign: details.zodiac,\r\n              rarity: details.rarity,\r\n              correct: isCorrect\r\n            };\r\n    \r\n            // Set all states at once after the fetch is completed and data is processed\r\n            setGuesses(prevGuesses => [newGuess, ...prevGuesses]); // Ensures immutability\r\n            setInput(''); // Clear input\r\n            setFeedback(isCorrect ? 'Correct! Well done.' : 'Incorrect, try again!');\r\n          } else {\r\n            // Handle case where no valid details are returned\r\n            setFeedback('Failed to fetch details for the character. Try again.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to fetch character details:', error);\r\n          setFeedback('Error fetching character details.');\r\n        } finally {\r\n          // Re-enable the button or hide loading indicator here\r\n        }\r\n      }\r\n    };\r\n     \r\n\r\n  async function fetchCharacters() {\r\n    const response = await fetch('http://127.0.0.1:5000/api/characters');\r\n    const characters = await response.json();\r\n    console.log(characters);\r\n  }\r\n  \r\n  async function fetchCharacterDetails(characterId) {\r\n    const response = await fetch(`http://127.0.0.1:5000/api/characters/${characterId}`);\r\n    const details = await response.json();\r\n    console.log(details); // Make sure this logs expected details\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div className=\"main-game\">\r\n        <div className=\"character-display\">\r\n        <input\r\n            type=\"text\"\r\n            placeholder=\"Enter character name...\"\r\n            value={input}\r\n            onChange={handleInputChange}\r\n        />\r\n        {filteredCharacters.length > 0 && (\r\n            <ul className=\"autocomplete-dropdown\">\r\n                {filteredCharacters.map(character => (\r\n                    <li key={character.id} onClick={() => setInput(character.name)}>\r\n                        {character.name} {/*{photo} {name}*/}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )}\r\n            <button onClick={handleGuessSubmit}>Guess</button>\r\n        </div>\r\n        <p>{feedback}</p> {/* Display feedback message */}\r\n        <div className=\"guess-table\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Photo</th>\r\n                        <th>Name</th>\r\n                        <th>Element</th>\r\n                        <th>Class</th>\r\n                        <th>Star Sign</th>\r\n                        <th>Rarity</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {guesses.map((item, index) => (\r\n                        <tr key={index}>\r\n                            <td>\r\n                              <img src={item.photo} alt=\"Character\" className=\"character-image\" />\r\n                            </td>\r\n                            <td>{item.guess}</td>\r\n                            <td className={item.element === solution.element ? 'correct-answer' : 'incorrect-answer'}>\r\n                                {item.element}\r\n                            </td>\r\n                            <td className={item.class === solution.class ? 'correct-answer' : 'incorrect-answer'}>\r\n                                {item.class}\r\n                            </td>\r\n                            <td className={item.starsign === solution.starsign ? 'correct-answer' : 'incorrect-answer'}>\r\n                                {item.starsign}\r\n                            </td>\r\n                            <td className={item.rarity === solution.rarity ? 'correct-answer' : 'incorrect-answer'}>\r\n                                {item.rarity}\r\n                            </td>\r\n                            <td className={item.correct ? 'correct' : 'incorrect'}>\r\n                                {item.correct ? 'Correct' : 'Incorrect'}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        {solution && <div>Debug: Solution is {solution.name}</div>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default MainGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}