{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\epic7dle\\\\frontend\\\\src\\\\components\\\\MainGameDir\\\\MainGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainGame() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [selectedCharacter, setSelectedCharacter] = useState('');\n  useEffect(() => {\n    // Call the fetchCharacters when the component mounts\n    fetchCharacters();\n  }, []);\n  const fetchCharacters = async () => {\n    const response = await fetch('http://127.0.0.1:5000/api/characters');\n    const data = await response.json();\n    const charactersArray = Object.keys(data).map(key => ({\n      id: data[key].id,\n      name: key,\n      attribute: data[key].attribute\n      // include other properties as needed\n    }));\n    setCharacters(charactersArray);\n  };\n  const handleCharacterChange = event => {\n    setSelectedCharacter(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCharacter,\n      onChange: handleCharacterChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), characters.map(character => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: character.name,\n        children: character.name\n      }, character.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(MainGame, \"SZdaK9Hs3eAR6cbQsUwz3O3ssAA=\");\n_c = MainGame;\nexport default MainGame;\nvar _c;\n$RefreshReg$(_c, \"MainGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainGame","_s","characters","setCharacters","selectedCharacter","setSelectedCharacter","fetchCharacters","response","fetch","data","json","charactersArray","Object","keys","map","key","id","name","attribute","handleCharacterChange","event","target","value","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","character","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/epic7dle/frontend/src/components/MainGameDir/MainGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction MainGame() {\r\n    const [characters, setCharacters] = useState([]);\r\n    const [selectedCharacter, setSelectedCharacter] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Call the fetchCharacters when the component mounts\r\n        fetchCharacters();\r\n    }, []);\r\n\r\n    const fetchCharacters = async () => {\r\n        const response = await fetch('http://127.0.0.1:5000/api/characters');\r\n        const data = await response.json();\r\n        const charactersArray = Object.keys(data).map(key => ({\r\n            id: data[key].id,\r\n            name: key,\r\n            attribute: data[key].attribute,\r\n            // include other properties as needed\r\n        }));\r\n        setCharacters(charactersArray);\r\n    };\r\n\r\n    const handleCharacterChange = (event) => {\r\n        setSelectedCharacter(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <select value={selectedCharacter} onChange={handleCharacterChange}>\r\n                <option value=\"\">Select a character</option>\r\n                {characters.map((character) => (\r\n                    <option key={character.id} value={character.name}>{character.name}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainGame;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACZ;IACAS,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;IACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,MAAMC,eAAe,GAAGC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAACK,GAAG,CAACC,GAAG,KAAK;MAClDC,EAAE,EAAEP,IAAI,CAACM,GAAG,CAAC,CAACC,EAAE;MAChBC,IAAI,EAAEF,GAAG;MACTG,SAAS,EAAET,IAAI,CAACM,GAAG,CAAC,CAACG;MACrB;IACJ,CAAC,CAAC,CAAC;IACHf,aAAa,CAACQ,eAAe,CAAC;EAClC,CAAC;EAED,MAAMQ,qBAAqB,GAAIC,KAAK,IAAK;IACrCf,oBAAoB,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5C,CAAC;EAED,oBACIvB,OAAA;IAAAwB,QAAA,eACIxB,OAAA;MAAQuB,KAAK,EAAElB,iBAAkB;MAACoB,QAAQ,EAAEL,qBAAsB;MAAAI,QAAA,gBAC9DxB,OAAA;QAAQuB,KAAK,EAAC,EAAE;QAAAC,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC3C1B,UAAU,CAACY,GAAG,CAAEe,SAAS,iBACtB9B,OAAA;QAA2BuB,KAAK,EAAEO,SAAS,CAACZ,IAAK;QAAAM,QAAA,EAAEM,SAAS,CAACZ;MAAI,GAApDY,SAAS,CAACb,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiD,CAC7E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAAC3B,EAAA,CAnCQD,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAqCjB,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}