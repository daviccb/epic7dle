{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\epic7dle\\\\frontend\\\\src\\\\components\\\\MainGameDir\\\\MainGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MainGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CORRECT_ANSWER = \"Kirara\"; // You can dynamically set this based on your application needs\n\n// In one of your React components\nuseEffect(() => {\n  fetch('http://localhost:3001/api/greet').then(response => response.json()).then(data => console.log(data));\n}, []);\nfunction MainGame() {\n  _s();\n  const [input, setInput] = useState('');\n  const [guesses, setGuesses] = useState([]);\n  const [feedback, setFeedback] = useState('');\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleGuessSubmit = () => {\n    if (input.trim() !== '') {\n      const isCorrect = input.trim().toLowerCase() === CORRECT_ANSWER.toLowerCase();\n      const newGuess = {\n        guess: input,\n        correct: isCorrect\n      };\n      setGuesses([newGuess, ...guesses]); // Prepend new guess to the array\n      setInput(''); // Clear input after adding guess\n\n      // Set feedback message\n      if (isCorrect) {\n        setFeedback('Correct! Well done.');\n      } else {\n        setFeedback('Incorrect, try again!');\n      }\n    }\n  };\n  async function submitGuess(guess) {\n    const response = await fetch('/guess', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        guess\n      })\n    });\n    const {\n      correct\n    } = await response.json();\n    if (correct) {\n      alert(\"Correct guess!\");\n    } else {\n      alert(\"Wrong guess. Try again!\");\n    }\n  }\n  async function fetchCharacters() {\n    const response = await fetch('/characters');\n    const characters = await response.json();\n    console.log(characters);\n  }\n  async function fetchCharacterDetails(characterId) {\n    const response = await fetch(`/characters/${characterId}`);\n    const details = await response.json();\n    console.log(details);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter character name...\",\n        value: input,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchCharacters,\n        children: \"Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guess-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Guess Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Guess\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: guesses.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.guess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: item.correct ? 'correct' : 'incorrect',\n              children: item.correct ? 'Correct' : 'Incorrect'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(MainGame, \"va6AcDaTfEpA2Cg1H/rGN635Xzw=\");\n_c = MainGame;\nexport default MainGame;\nvar _c;\n$RefreshReg$(_c, \"MainGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CORRECT_ANSWER","useEffect","fetch","then","response","json","data","console","log","MainGame","_s","input","setInput","guesses","setGuesses","feedback","setFeedback","handleInputChange","e","target","value","handleGuessSubmit","trim","isCorrect","toLowerCase","newGuess","guess","correct","submitGuess","method","headers","body","JSON","stringify","alert","fetchCharacters","characters","fetchCharacterDetails","characterId","details","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/epic7dle/frontend/src/components/MainGameDir/MainGame.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './MainGame.css';\r\n\r\nconst CORRECT_ANSWER = \"Kirara\"; // You can dynamically set this based on your application needs\r\n\r\n// In one of your React components\r\nuseEffect(() => {\r\n  fetch('http://localhost:3001/api/greet')\r\n      .then(response => response.json())\r\n      .then(data => console.log(data));\r\n}, []);\r\n\r\nfunction MainGame() {\r\n  const [input, setInput] = useState('');\r\n  const [guesses, setGuesses] = useState([]);\r\n  const [feedback, setFeedback] = useState('');\r\n  \r\n\r\n    const handleInputChange = (e) => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleGuessSubmit = () => {\r\n      if (input.trim() !== '') {\r\n          const isCorrect = input.trim().toLowerCase() === CORRECT_ANSWER.toLowerCase();\r\n          const newGuess = {\r\n              guess: input,\r\n              correct: isCorrect\r\n          };\r\n          setGuesses([newGuess, ...guesses]); // Prepend new guess to the array\r\n          setInput(''); // Clear input after adding guess\r\n  \r\n          // Set feedback message\r\n          if (isCorrect) {\r\n              setFeedback('Correct! Well done.');\r\n          } else {\r\n              setFeedback('Incorrect, try again!');\r\n          }\r\n      }\r\n  };\r\n\r\n  async function submitGuess(guess) {\r\n    const response = await fetch('/guess', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ guess })\r\n    });\r\n    const { correct } = await response.json();\r\n    if (correct) {\r\n      alert(\"Correct guess!\");\r\n    } else {\r\n      alert(\"Wrong guess. Try again!\");\r\n    }\r\n  }\r\n  \r\n\r\n  async function fetchCharacters() {\r\n    const response = await fetch('/characters');\r\n    const characters = await response.json();\r\n    console.log(characters);\r\n  }\r\n  \r\n  async function fetchCharacterDetails(characterId) {\r\n    const response = await fetch(`/characters/${characterId}`);\r\n    const details = await response.json();\r\n    console.log(details);\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"main-game\">\r\n        <div className=\"character-display\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter character name...\"\r\n                value={input}\r\n                onChange={handleInputChange}\r\n            />\r\n            <button onClick={fetchCharacters}>Guess</button>\r\n        </div>\r\n        <p>{feedback}</p> {/* Display feedback message */}\r\n        <div className=\"guess-table\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Guess Number</th>\r\n                        <th>Guess</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {guesses.map((item, index) => (\r\n                        <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{item.guess}</td>\r\n                            <td className={item.correct ? 'correct' : 'incorrect'}>\r\n                                {item.correct ? 'Correct' : 'Incorrect'}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default MainGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}