{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\epic7dle\\\\frontend\\\\src\\\\components\\\\MainGameDir\\\\MainGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MainGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CORRECT_ANSWER = \"Zio\"; // You can dynamically set this based on your application needs\n\nfunction MainGame() {\n  _s();\n  const [input, setInput] = useState('');\n  const [guesses, setGuesses] = useState([]);\n  const [feedback, setFeedback] = useState('');\n  const handleInputChange = e => {\n    fetchCharacters();\n    setInput(e.target.value);\n  };\n  const handleGuessSubmit = async () => {\n    if (input.trim() !== '') {\n      // First, disable the button or show a loading indicator (not shown here)\n\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/api/characters/${input.trim()}`);\n        const details = await response.json();\n\n        // Check if details are valid and contain 'attribute'\n        if (details && details.attribute) {\n          const isCorrect = input.trim().toLowerCase() === CORRECT_ANSWER.toLowerCase();\n          const newGuess = {\n            guess: input,\n            element: details.attribute,\n            correct: isCorrect\n          };\n\n          // Set all states at once after the fetch is completed and data is processed\n          setGuesses(prevGuesses => [newGuess, ...prevGuesses]); // Ensures immutability\n          setInput(''); // Clear input\n          setFeedback(isCorrect ? 'Correct! Well done.' : 'Incorrect, try again!');\n        } else {\n          // Handle case where no valid details are returned\n          setFeedback('Failed to fetch details for the character. Try again.');\n        }\n      } catch (error) {\n        console.error('Failed to fetch character details:', error);\n        setFeedback('Error fetching character details.');\n      } finally {\n        // Re-enable the button or hide loading indicator here\n      }\n    }\n  };\n  async function fetchCharacters() {\n    const response = await fetch('http://127.0.0.1:5000/api/characters');\n    const characters = await response.json();\n    console.log(characters);\n  }\n  async function fetchCharacterDetails(characterId) {\n    const response = await fetch(`http://127.0.0.1:5000/api/characters/${characterId}`);\n    const details = await response.json();\n    console.log(details); // Make sure this logs expected details\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter character name...\",\n        value: input,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGuessSubmit,\n        children: \"Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guess-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Guess Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Guess\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Element\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: guesses.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.guess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.element\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: item.correct ? 'correct' : 'incorrect',\n              children: item.correct ? 'Correct' : 'Incorrect'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(MainGame, \"va6AcDaTfEpA2Cg1H/rGN635Xzw=\");\n_c = MainGame;\nexport default MainGame;\nvar _c;\n$RefreshReg$(_c, \"MainGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CORRECT_ANSWER","MainGame","_s","input","setInput","guesses","setGuesses","feedback","setFeedback","handleInputChange","e","fetchCharacters","target","value","handleGuessSubmit","trim","response","fetch","details","json","attribute","isCorrect","toLowerCase","newGuess","guess","element","correct","prevGuesses","error","console","characters","log","fetchCharacterDetails","characterId","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/epic7dle/frontend/src/components/MainGameDir/MainGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MainGame.css';\r\n\r\nconst CORRECT_ANSWER = \"Zio\"; // You can dynamically set this based on your application needs\r\n\r\n\r\n\r\nfunction MainGame() {\r\n  const [input, setInput] = useState('');\r\n  const [guesses, setGuesses] = useState([]);\r\n  const [feedback, setFeedback] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n      fetchCharacters()\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleGuessSubmit = async () => {\r\n      if (input.trim() !== '') {\r\n        // First, disable the button or show a loading indicator (not shown here)\r\n    \r\n        try {\r\n          const response = await fetch(`http://127.0.0.1:5000/api/characters/${input.trim()}`);\r\n          const details = await response.json();\r\n    \r\n          // Check if details are valid and contain 'attribute'\r\n          if (details && details.attribute) {\r\n            const isCorrect = input.trim().toLowerCase() === CORRECT_ANSWER.toLowerCase();\r\n            const newGuess = {\r\n              guess: input,\r\n              element: details.attribute,\r\n              correct: isCorrect\r\n            };\r\n    \r\n            // Set all states at once after the fetch is completed and data is processed\r\n            setGuesses(prevGuesses => [newGuess, ...prevGuesses]); // Ensures immutability\r\n            setInput(''); // Clear input\r\n            setFeedback(isCorrect ? 'Correct! Well done.' : 'Incorrect, try again!');\r\n          } else {\r\n            // Handle case where no valid details are returned\r\n            setFeedback('Failed to fetch details for the character. Try again.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to fetch character details:', error);\r\n          setFeedback('Error fetching character details.');\r\n        } finally {\r\n          // Re-enable the button or hide loading indicator here\r\n        }\r\n      }\r\n    };\r\n     \r\n\r\n  async function fetchCharacters() {\r\n    const response = await fetch('http://127.0.0.1:5000/api/characters');\r\n    const characters = await response.json();\r\n    console.log(characters);\r\n  }\r\n  \r\n  async function fetchCharacterDetails(characterId) {\r\n    const response = await fetch(`http://127.0.0.1:5000/api/characters/${characterId}`);\r\n    const details = await response.json();\r\n    console.log(details); // Make sure this logs expected details\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"main-game\">\r\n        <div className=\"character-display\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter character name...\"\r\n                value={input}\r\n                onChange={handleInputChange}\r\n            />\r\n            <button onClick={handleGuessSubmit}>Guess</button>\r\n        </div>\r\n        <p>{feedback}</p> {/* Display feedback message */}\r\n        <div className=\"guess-table\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Guess Number</th>\r\n                        <th>Guess</th>\r\n                        <th>Element</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {guesses.map((item, index) => (\r\n                        <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{item.guess}</td>\r\n                            <td>{item.element}</td>\r\n                            <td className={item.correct ? 'correct' : 'incorrect'}>\r\n                                {item.correct ? 'Correct' : 'Incorrect'}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default MainGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}